FROM debian:bookworm-slim

WORKDIR /app

# Usually we'd do the compilation in a separate stage to keep the container slim
# (https://docs.docker.com/build/building/multi-stage/), but since Pytorch libs
# are the major contributor to Docker image size, the additional ~200 MB for gcc
# are just a drop in the ocean.
RUN apt-get update && apt-get install -y \
    cmake \
    build-essential \
    curl \
    unzip \
    git \
    libssl-dev \
    && apt-get clean

# Build protocol buffers.
# We could probably just as well do 
#   apt-get install libprotobuf-dev
# but currently our CMakeLists.txt depends on the protobuf-config.cmake file, which
# is not included in that package.
# TODO: figure out a way to configure CMakeLists.txt s.t. it doesn't need the .cmake file.
# Update 2023-11-01: We also use absl::StatusOr and friends now, so compiling this is
# is probably OK.
#
# Running ldconfig is required b/c otherwise not all absl .so files ended up in the
# /etc/ld.so.cache (e.g. libabsl_strings.so.0 was there, but libabsl_base.so.0 was missing).
RUN curl -L -o protobuf-24.4.tar.gz https://github.com/protocolbuffers/protobuf/releases/download/v24.4/protobuf-24.4.tar.gz \
    && tar xzf protobuf-24.4.tar.gz \
    && rm protobuf-24.4.tar.gz \
    && cd protobuf-24.4 \
    && git clone https://github.com/abseil/abseil-cpp.git third_party/abseil-cpp \
    && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_SHARED_LIBS=ON -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_BUILD_PROTOC_BINARIES=OFF . \
    && cmake --build . --parallel 4 \
    && cmake --install . \
    && cd .. \
    && rm -rf protobuf-24.4 \
    && ldconfig

RUN curl -L -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-2.1.0%2Bcpu.zip \
    && unzip libtorch.zip \
    && rm libtorch.zip

# Copy source files. Do this after required libraries were installed to avoid repeating that
# each time a source changes.
COPY . ./

RUN mkdir build \
    && cd build \
    && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="/app/libtorch/share/cmake;/usr/local/lib/cmake/protobuf" .. \
    && cmake --build . --parallel 4

WORKDIR /app/build

ENTRYPOINT ["./worker"]
